{"version":3,"sources":["index.tsx"],"names":["App","React","constructor","props","super","this","state","quote","componentDidMount","renderCanvas","componentDidUpdate","text","canvas","document","getElementById","context","getContext","img","Image","src","onload","drawImage","lineWidth","fillStyle","font","lineHeight","textAlign","lines","split","i","length","fillText","handleChange","event","setState","target","value","render","className","id","onChange","width","height","rootElement"],"mappings":"gIAAA,8BAIA,MAAMA,UAAYC,YACdC,YAAYC,GACRC,MAAMD,GACNE,KAAKC,MAAQ,CACTC,MAAO,4BAIRC,oBACHH,KAAKI,aAAaJ,KAAKC,MAAMC,OAG1BG,qBACHL,KAAKI,aAAaJ,KAAKC,MAAMC,OAG1BE,aAAaE,GAChB,IAAIC,EAASC,SAASC,eAAe,UACrC,GAAe,OAAXF,EAAJ,CAGA,IAAIG,EAAUH,EAAOI,WAAW,MAI5BC,EAAM,IAAIC,MACdD,EAAIE,IAAM,iBAEVF,EAAIG,OAAS,KAETL,EAAQM,UAAUJ,EAAK,EAAG,GAC1BF,EAAQO,UAAY,EACpBP,EAAQQ,UAAY,UAEpBR,EAAQS,KAAOC,oBACfV,EAAQW,UAAY,SAIpB,IAHA,IAEIC,EAAQhB,EAAKiB,MAAM,MACdC,EAAI,EAAGA,EAAIF,EAAMG,OAAQD,GAAK,EACnCd,EAAQgB,SAASJ,EAAME,GAJnB,IACA,GARS,GAWqBA,GAEtCd,EAAQgB,SAAS,8CAAsC,IAAK,IAC5DhB,EAAQgB,SACJ,sCACA,IACA,MAKLC,aAAaC,GAChB5B,KAAK6B,SAAS,CACV3B,MAAO0B,EAAME,OAAOC,QAIrBC,SACH,OACI,uBAAKC,UAAU,OACX,4BACIC,GAAG,OACHD,UAAU,YACVF,MAAO/B,KAAKC,MAAMC,MAClBiC,SAAWP,GAAU5B,KAAK2B,aAAaC,KAE3C,uBAAKK,UAAU,kBACX,0BACIA,UAAU,YACVC,GAAG,SACHE,MAAM,MACNC,OAAO,WAQ/B,MAAMC,EAAc9B,SAASC,eAAe,QAC5CuB,iBAAO,gBAACrC,EAAD,MAAS2C,I","file":"static/js/main.521bf461.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./styles.css\";\n\nclass App extends React.Component<any, any> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            quote: \"Le discours progressiste\"\n        };\n    }\n\n    public componentDidMount() {\n        this.renderCanvas(this.state.quote);\n    }\n\n    public componentDidUpdate() {\n        this.renderCanvas(this.state.quote);\n    }\n\n    public renderCanvas(text: string) {\n        var canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\n        if (canvas === null) {\n            return;\n        }\n        var context = canvas.getContext(\"2d\")!;\n\n\n        // Draw Image function\n        var img = new Image();\n        img.src = \"background.png\";\n\n        img.onload = () => {\n            var lineHeight = 18;\n            context.drawImage(img, 0, 0);\n            context.lineWidth = 1;\n            context.fillStyle = \"#000000\";\n            //context.lineStyle = \"#000000\";\n            context.font = lineHeight + \"px Indie Flower\";\n            context.textAlign = \"center\";\n            var x = 150;\n            var y = 23;\n            var lines = text.split(\"\\n\");\n            for (var i = 0; i < lines.length; i += 1) {\n                context.fillText(lines[i], x, y + i * lineHeight);\n            }\n            context.fillText(\"Vous êtes bête contrairement à moi\", 420, 50);\n            context.fillText(\n                \"(Xavier Gorce) qui suit intelligent\",\n                420,\n                50 + lineHeight\n            );\n        };\n    }\n\n    public handleChange(event: any) {\n        this.setState({\n            quote: event.target.value\n        });\n    }\n\n    public render() {\n        return (\n            <div className=\"App\">\n                <textarea\n                    id=\"text\"\n                    className=\"flex-item\"\n                    value={this.state.quote}\n                    onChange={(event) => this.handleChange(event)}\n                ></textarea>\n                <div className=\"flex-container\">\n                    <canvas\n                        className=\"flex-item\"\n                        id=\"canvas\"\n                        width=\"560\"\n                        height=\"287\"\n                    ></canvas>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}